
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000360  00000000  00000000  00000380  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000071  00000000  00000000  000006e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000751  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000025  00000000  00000000  00000771  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000245  00000000  00000000  00000796  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000109  00000000  00000000  000009db  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001af  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000c94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000f2  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000e6  00000000  00000000  00000db6  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2b c0       	rjmp	.+86     	; 0x5a <__bad_interrupt>
   4:	2a c0       	rjmp	.+84     	; 0x5a <__bad_interrupt>
   6:	29 c0       	rjmp	.+82     	; 0x5a <__bad_interrupt>
   8:	28 c0       	rjmp	.+80     	; 0x5a <__bad_interrupt>
   a:	27 c0       	rjmp	.+78     	; 0x5a <__bad_interrupt>
   c:	26 c0       	rjmp	.+76     	; 0x5a <__bad_interrupt>
   e:	25 c0       	rjmp	.+74     	; 0x5a <__bad_interrupt>
  10:	24 c0       	rjmp	.+72     	; 0x5a <__bad_interrupt>
  12:	23 c0       	rjmp	.+70     	; 0x5a <__bad_interrupt>
  14:	22 c0       	rjmp	.+68     	; 0x5a <__bad_interrupt>
  16:	21 c0       	rjmp	.+66     	; 0x5a <__bad_interrupt>
  18:	20 c0       	rjmp	.+64     	; 0x5a <__bad_interrupt>
  1a:	1f c0       	rjmp	.+62     	; 0x5a <__bad_interrupt>
  1c:	1e c0       	rjmp	.+60     	; 0x5a <__bad_interrupt>
  1e:	1d c0       	rjmp	.+58     	; 0x5a <__bad_interrupt>
  20:	1c c0       	rjmp	.+56     	; 0x5a <__bad_interrupt>
  22:	1b c0       	rjmp	.+54     	; 0x5a <__bad_interrupt>
  24:	1a c0       	rjmp	.+52     	; 0x5a <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	ec e2       	ldi	r30, 0x2C	; 44
  36:	f3 e0       	ldi	r31, 0x03	; 3
  38:	03 c0       	rjmp	.+6      	; 0x40 <.do_copy_data_start>

0000003a <.do_copy_data_loop>:
  3a:	c8 95       	lpm
  3c:	31 96       	adiw	r30, 0x01	; 1
  3e:	0d 92       	st	X+, r0

00000040 <.do_copy_data_start>:
  40:	a0 36       	cpi	r26, 0x60	; 96
  42:	b1 07       	cpc	r27, r17
  44:	d1 f7       	brne	.-12     	; 0x3a <.do_copy_data_loop>

00000046 <__do_clear_bss>:
  46:	10 e0       	ldi	r17, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	01 c0       	rjmp	.+2      	; 0x50 <.do_clear_bss_start>

0000004e <.do_clear_bss_loop>:
  4e:	1d 92       	st	X+, r1

00000050 <.do_clear_bss_start>:
  50:	a0 36       	cpi	r26, 0x60	; 96
  52:	b1 07       	cpc	r27, r17
  54:	e1 f7       	brne	.-8      	; 0x4e <.do_clear_bss_loop>
  56:	54 d0       	rcall	.+168    	; 0x100 <main>
  58:	68 c1       	rjmp	.+720    	; 0x32a <_exit>

0000005a <__bad_interrupt>:
  5a:	d2 cf       	rjmp	.-92     	; 0x0 <__vectors>

0000005c <serwo>:
//Sterowanie serwomechnizmem
#include <util/delay.h>

void serwo(uint8_t angle, uint8_t speed) { //MAX angle = 100, 
  5c:	df 92       	push	r13
  5e:	ef 92       	push	r14
  60:	ff 92       	push	r15
  62:	0f 93       	push	r16
  64:	1f 93       	push	r17
  66:	cf 93       	push	r28
  68:	df 93       	push	r29
	uint8_t a;
	while (a < 5) {
	/*if (angle > 100) {
		angle = 100;}*/
	SerwoPORT = 1<<Serwo;
	_delay_ms(/*1+*/(angle/100));
  6a:	64 e6       	ldi	r22, 0x64	; 100
  6c:	52 d1       	rcall	.+676    	; 0x312 <__udivmodqi4>
  6e:	c8 2f       	mov	r28, r24
  70:	dd 27       	eor	r29, r29
  72:	3a c0       	rjmp	.+116    	; 0xe8 <__stack+0x9>
  74:	84 e0       	ldi	r24, 0x04	; 4
  76:	88 bb       	out	0x18, r24	; 24
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  78:	6c 2f       	mov	r22, r28
  7a:	7d 2f       	mov	r23, r29
  7c:	88 27       	eor	r24, r24
  7e:	77 fd       	sbrc	r23, 7
  80:	80 95       	com	r24
  82:	98 2f       	mov	r25, r24
  84:	7e d0       	rcall	.+252    	; 0x182 <__floatsisf>
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	4a e7       	ldi	r20, 0x7A	; 122
  8c:	54 e4       	ldi	r21, 0x44	; 68
  8e:	f0 d0       	rcall	.+480    	; 0x270 <__mulsf3>
  90:	e6 2e       	mov	r14, r22
  92:	f7 2e       	mov	r15, r23
  94:	08 2f       	mov	r16, r24
  96:	19 2f       	mov	r17, r25
	if (__tmp < 1.0)
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	40 e8       	ldi	r20, 0x80	; 128
  9e:	5f e3       	ldi	r21, 0x3F	; 63
  a0:	7a d0       	rcall	.+244    	; 0x196 <__eqsf2>
  a2:	88 23       	and	r24, r24
  a4:	1c f4       	brge	.+6      	; 0xac <serwo+0x50>
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	15 c0       	rjmp	.+42     	; 0xd6 <serwo+0x7a>
		__ticks = 1;
	else if (__tmp > 65535)
  ac:	20 e0       	ldi	r18, 0x00	; 0
  ae:	3f ef       	ldi	r19, 0xFF	; 255
  b0:	4f e7       	ldi	r20, 0x7F	; 127
  b2:	57 e4       	ldi	r21, 0x47	; 71
  b4:	91 2f       	mov	r25, r17
  b6:	80 2f       	mov	r24, r16
  b8:	7f 2d       	mov	r23, r15
  ba:	6e 2d       	mov	r22, r14
  bc:	6f d0       	rcall	.+222    	; 0x19c <__gesf2>
  be:	18 16       	cp	r1, r24
  c0:	1c f4       	brge	.+6      	; 0xc8 <serwo+0x6c>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	07 c0       	rjmp	.+14     	; 0xd6 <serwo+0x7a>
		__ticks = 0;	/* i.e. 65536 */
	else
		__ticks = (uint16_t)__tmp;
  c8:	91 2f       	mov	r25, r17
  ca:	80 2f       	mov	r24, r16
  cc:	7f 2d       	mov	r23, r15
  ce:	6e 2d       	mov	r22, r14
  d0:	3b d0       	rcall	.+118    	; 0x148 <__fixsfsi>
  d2:	97 2f       	mov	r25, r23
  d4:	86 2f       	mov	r24, r22
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <serwo+0x7a>
	SerwoPORT = ~(1<<Serwo);
  da:	8b ef       	ldi	r24, 0xFB	; 251
  dc:	88 bb       	out	0x18, r24	; 24
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  de:	80 e2       	ldi	r24, 0x20	; 32
  e0:	9e e4       	ldi	r25, 0x4E	; 78
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <__stack+0x3>
	_delay_ms(20/*-(1+(angle/100))*/);
	a++;
  e6:	d3 94       	inc	r13
  e8:	84 e0       	ldi	r24, 0x04	; 4
  ea:	8d 15       	cp	r24, r13
  ec:	08 f0       	brcs	.+2      	; 0xf0 <__stack+0x11>
  ee:	c2 cf       	rjmp	.-124    	; 0x74 <serwo+0x18>
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	1f 91       	pop	r17
  f6:	0f 91       	pop	r16
  f8:	ff 90       	pop	r15
  fa:	ef 90       	pop	r14
  fc:	df 90       	pop	r13
  fe:	08 95       	ret

00000100 <main>:
#include <avr/interrupt.h> 
#include "harddef.h"
#include "serwo.c"

int main(void) {
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	87 bb       	out	0x17, r24	; 23
	////////////////////////////////////////
	// inicjacja
	DDRB = _BV(2);
	PORTB = ~(_BV(2));
 104:	8b ef       	ldi	r24, 0xFB	; 251
 106:	88 bb       	out	0x18, r24	; 24
	
	SWDDR = ~(1<<SW1 | 1<<SW2);
 108:	8c ef       	ldi	r24, 0xFC	; 252
 10a:	81 bb       	out	0x11, r24	; 17
	SWPORT = 1<<SW1 | 1<<SW2;
 10c:	83 e0       	ldi	r24, 0x03	; 3
 10e:	82 bb       	out	0x12, r24	; 18
	
	// koniec inicjacji
	///////////////////////////////////////
	
	uint8_t b = 50;
	for(;;) {
		
		serwo(150, 0);
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	86 e9       	ldi	r24, 0x96	; 150
 114:	a3 df       	rcall	.-186    	; 0x5c <serwo>
		
		if(!(SWPIN & 1<<SW1))
 116:	80 99       	sbic	0x10, 0	; 16
 118:	0a c0       	rjmp	.+20     	; 0x12e <main+0x2e>
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 11a:	80 e5       	ldi	r24, 0x50	; 80
 11c:	93 ec       	ldi	r25, 0xC3	; 195
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x1e>
 122:	03 c0       	rjmp	.+6      	; 0x12a <main+0x2a>
		{
			// usuwanie drgañ styków
			_delay_ms(50);
			while(!(SWPIN & 1<<SW1))
			{
				serwo(250, 0);
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	8a ef       	ldi	r24, 0xFA	; 250
 128:	99 df       	rcall	.-206    	; 0x5c <serwo>
 12a:	80 9b       	sbis	0x10, 0	; 16
 12c:	fb cf       	rjmp	.-10     	; 0x124 <main+0x24>
			}
		}
		
		if(!(SWPIN & 1<<SW2))
 12e:	81 99       	sbic	0x10, 1	; 16
 130:	ef cf       	rjmp	.-34     	; 0x110 <main+0x10>
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 132:	80 e5       	ldi	r24, 0x50	; 80
 134:	93 ec       	ldi	r25, 0xC3	; 195
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0x36>
 13a:	03 c0       	rjmp	.+6      	; 0x142 <main+0x42>
		{
			// usuwanie drgañ styków
			_delay_ms(50);
			while(!(SWPIN & 1<<SW2))
			{
				serwo(0, 0);
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	8d df       	rcall	.-230    	; 0x5c <serwo>
 142:	81 9b       	sbis	0x10, 1	; 16
 144:	fb cf       	rjmp	.-10     	; 0x13c <main+0x3c>
 146:	e4 cf       	rjmp	.-56     	; 0x110 <main+0x10>

00000148 <__fixsfsi>:
 148:	97 fb       	bst	r25, 7
 14a:	70 d0       	rcall	.+224    	; 0x22c <__fp_split1>
 14c:	9f 37       	cpi	r25, 0x7F	; 127
 14e:	38 f0       	brcs	.+14     	; 0x15e <__fixsfsi+0x16>
 150:	fe e9       	ldi	r31, 0x9E	; 158
 152:	f9 1b       	sub	r31, r25
 154:	98 2f       	mov	r25, r24
 156:	87 2f       	mov	r24, r23
 158:	76 2f       	mov	r23, r22
 15a:	6b 2f       	mov	r22, r27
 15c:	05 c0       	rjmp	.+10     	; 0x168 <__fixsfsi+0x20>
 15e:	83 c0       	rjmp	.+262    	; 0x266 <__fp_zero>
 160:	96 95       	lsr	r25
 162:	87 95       	ror	r24
 164:	77 95       	ror	r23
 166:	67 95       	ror	r22
 168:	f1 50       	subi	r31, 0x01	; 1
 16a:	d0 f7       	brcc	.-12     	; 0x160 <__fixsfsi+0x18>
 16c:	3e f4       	brtc	.+14     	; 0x17c <__fp_lneg+0xe>

0000016e <__fp_lneg>:
 16e:	90 95       	com	r25
 170:	80 95       	com	r24
 172:	70 95       	com	r23
 174:	61 95       	neg	r22
 176:	7f 4f       	sbci	r23, 0xFF	; 255
 178:	8f 4f       	sbci	r24, 0xFF	; 255
 17a:	9f 4f       	sbci	r25, 0xFF	; 255
 17c:	08 95       	ret

0000017e <__floatunssisf>:
 17e:	e8 94       	clt
 180:	03 c0       	rjmp	.+6      	; 0x188 <__floatsisf+0x6>

00000182 <__floatsisf>:
 182:	97 fb       	bst	r25, 7
 184:	0e f4       	brtc	.+2      	; 0x188 <__floatsisf+0x6>
 186:	f3 df       	rcall	.-26     	; 0x16e <__fp_lneg>
 188:	b6 2f       	mov	r27, r22
 18a:	67 2f       	mov	r22, r23
 18c:	78 2f       	mov	r23, r24
 18e:	89 2f       	mov	r24, r25
 190:	9e e9       	ldi	r25, 0x9E	; 158
 192:	00 24       	eor	r0, r0
 194:	27 c0       	rjmp	.+78     	; 0x1e4 <__fp_merge>

00000196 <__eqsf2>:
 196:	0e d0       	rcall	.+28     	; 0x1b4 <.fp_cmp>
 198:	5e f0       	brts	.+22     	; 0x1b0 <__cmpsf2+0xe>
 19a:	04 c0       	rjmp	.+8      	; 0x1a4 <__cmpsf2+0x2>

0000019c <__gesf2>:
 19c:	0b d0       	rcall	.+22     	; 0x1b4 <.fp_cmp>
 19e:	26 f0       	brts	.+8      	; 0x1a8 <__cmpsf2+0x6>
 1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <__cmpsf2+0x2>

000001a2 <__cmpsf2>:
 1a2:	08 d0       	rcall	.+16     	; 0x1b4 <.fp_cmp>
 1a4:	19 f0       	breq	.+6      	; 0x1ac <__cmpsf2+0xa>
 1a6:	20 f4       	brcc	.+8      	; 0x1b0 <__cmpsf2+0xe>
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	08 95       	ret
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	08 95       	ret
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	08 95       	ret

000001b4 <.fp_cmp>:
 1b4:	97 fb       	bst	r25, 7
 1b6:	09 2e       	mov	r0, r25
 1b8:	05 26       	eor	r0, r21
 1ba:	00 f8       	bld	r0, 0
 1bc:	68 94       	set
 1be:	2d d0       	rcall	.+90     	; 0x21a <__fp_split2>
 1c0:	e8 94       	clt
 1c2:	07 fc       	sbrc	r0, 7
 1c4:	07 c0       	rjmp	.+14     	; 0x1d4 <.fp_cmp+0x20>
 1c6:	62 17       	cp	r22, r18
 1c8:	73 07       	cpc	r23, r19
 1ca:	84 07       	cpc	r24, r20
 1cc:	95 07       	cpc	r25, r21
 1ce:	21 f0       	breq	.+8      	; 0x1d8 <.fp_cmp+0x24>
 1d0:	08 f4       	brcc	.+2      	; 0x1d4 <.fp_cmp+0x20>
 1d2:	00 94       	com	r0
 1d4:	07 94       	ror	r0
 1d6:	98 94       	clz
 1d8:	08 95       	ret
 1da:	9a 95       	dec	r25
 1dc:	bb 0f       	add	r27, r27
 1de:	66 1f       	adc	r22, r22
 1e0:	77 1f       	adc	r23, r23
 1e2:	88 1f       	adc	r24, r24

000001e4 <__fp_merge>:
 1e4:	11 24       	eor	r1, r1
 1e6:	99 23       	and	r25, r25
 1e8:	a1 f0       	breq	.+40     	; 0x212 <__fp_merge+0x2e>
 1ea:	88 23       	and	r24, r24
 1ec:	b2 f7       	brpl	.-20     	; 0x1da <.fp_cmp+0x26>
 1ee:	9f 3f       	cpi	r25, 0xFF	; 255
 1f0:	59 f0       	breq	.+22     	; 0x208 <__fp_merge+0x24>
 1f2:	bb 0f       	add	r27, r27
 1f4:	48 f4       	brcc	.+18     	; 0x208 <__fp_merge+0x24>
 1f6:	21 f4       	brne	.+8      	; 0x200 <__fp_merge+0x1c>
 1f8:	00 20       	and	r0, r0
 1fa:	11 f4       	brne	.+4      	; 0x200 <__fp_merge+0x1c>
 1fc:	60 ff       	sbrs	r22, 0
 1fe:	04 c0       	rjmp	.+8      	; 0x208 <__fp_merge+0x24>
 200:	6f 5f       	subi	r22, 0xFF	; 255
 202:	7f 4f       	sbci	r23, 0xFF	; 255
 204:	8f 4f       	sbci	r24, 0xFF	; 255
 206:	9f 4f       	sbci	r25, 0xFF	; 255
 208:	88 1f       	adc	r24, r24
 20a:	97 95       	ror	r25
 20c:	87 95       	ror	r24
 20e:	97 f9       	bld	r25, 7
 210:	08 95       	ret
 212:	29 c0       	rjmp	.+82     	; 0x266 <__fp_zero>

00000214 <__fp_split3>:
 214:	05 2e       	mov	r0, r21
 216:	09 26       	eor	r0, r25
 218:	07 fa       	bst	r0, 7

0000021a <__fp_split2>:
 21a:	44 0f       	add	r20, r20
 21c:	55 1f       	adc	r21, r21
 21e:	5f 3f       	cpi	r21, 0xFF	; 255
 220:	79 f0       	breq	.+30     	; 0x240 <__fp_split1+0x14>
 222:	aa 27       	eor	r26, r26
 224:	a5 17       	cp	r26, r21
 226:	08 f0       	brcs	.+2      	; 0x22a <__fp_split2+0x10>
 228:	51 e0       	ldi	r21, 0x01	; 1
 22a:	47 95       	ror	r20

0000022c <__fp_split1>:
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	9f 3f       	cpi	r25, 0xFF	; 255
 232:	31 f0       	breq	.+12     	; 0x240 <__fp_split1+0x14>
 234:	bb 27       	eor	r27, r27
 236:	b9 17       	cp	r27, r25
 238:	08 f0       	brcs	.+2      	; 0x23c <__fp_split1+0x10>
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	87 95       	ror	r24
 23e:	08 95       	ret
 240:	9f 91       	pop	r25
 242:	9f 91       	pop	r25
 244:	11 24       	eor	r1, r1
 246:	62 c0       	rjmp	.+196    	; 0x30c <__fp_nan>

00000248 <__fp_split_a>:
 248:	97 fb       	bst	r25, 7
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	9f 3f       	cpi	r25, 0xFF	; 255
 250:	31 f0       	breq	.+12     	; 0x25e <__fp_split_a+0x16>
 252:	bb 27       	eor	r27, r27
 254:	b9 17       	cp	r27, r25
 256:	08 f0       	brcs	.+2      	; 0x25a <__fp_split_a+0x12>
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	87 95       	ror	r24
 25c:	08 95       	ret
 25e:	9f 91       	pop	r25
 260:	9f 91       	pop	r25
 262:	11 24       	eor	r1, r1
 264:	53 c0       	rjmp	.+166    	; 0x30c <__fp_nan>

00000266 <__fp_zero>:
 266:	66 27       	eor	r22, r22
 268:	77 27       	eor	r23, r23
 26a:	88 27       	eor	r24, r24

0000026c <__fp_zerox>:
 26c:	99 27       	eor	r25, r25
 26e:	08 95       	ret

00000270 <__mulsf3>:
 270:	d1 df       	rcall	.-94     	; 0x214 <__fp_split3>
 272:	01 d0       	rcall	.+2      	; 0x276 <__mulsf3x>
 274:	b7 cf       	rjmp	.-146    	; 0x1e4 <__fp_merge>

00000276 <__mulsf3x>:
 276:	99 23       	and	r25, r25
 278:	39 f0       	breq	.+14     	; 0x288 <__mulsf3x+0x12>
 27a:	55 23       	and	r21, r21
 27c:	29 f0       	breq	.+10     	; 0x288 <__mulsf3x+0x12>
 27e:	9f 57       	subi	r25, 0x7F	; 127
 280:	5f 57       	subi	r21, 0x7F	; 127
 282:	95 0f       	add	r25, r21
 284:	13 f4       	brvc	.+4      	; 0x28a <__mulsf3x+0x14>
 286:	ca f1       	brmi	.+114    	; 0x2fa <__mulsf3x+0x84>
 288:	f1 cf       	rjmp	.-30     	; 0x26c <__fp_zerox>
 28a:	91 58       	subi	r25, 0x81	; 129
 28c:	9f 3f       	cpi	r25, 0xFF	; 255
 28e:	e1 f3       	breq	.-8      	; 0x288 <__mulsf3x+0x12>
 290:	a6 2f       	mov	r26, r22
 292:	00 24       	eor	r0, r0
 294:	11 24       	eor	r1, r1
 296:	bb 27       	eor	r27, r27
 298:	66 27       	eor	r22, r22
 29a:	55 27       	eor	r21, r21
 29c:	f8 e0       	ldi	r31, 0x08	; 8
 29e:	a6 95       	lsr	r26
 2a0:	20 f4       	brcc	.+8      	; 0x2aa <__mulsf3x+0x34>
 2a2:	02 0e       	add	r0, r18
 2a4:	13 1e       	adc	r1, r19
 2a6:	b4 1f       	adc	r27, r20
 2a8:	65 1f       	adc	r22, r21
 2aa:	22 0f       	add	r18, r18
 2ac:	33 1f       	adc	r19, r19
 2ae:	44 1f       	adc	r20, r20
 2b0:	55 1f       	adc	r21, r21
 2b2:	fa 95       	dec	r31
 2b4:	a1 f7       	brne	.-24     	; 0x29e <__mulsf3x+0x28>
 2b6:	f8 e0       	ldi	r31, 0x08	; 8
 2b8:	e7 2f       	mov	r30, r23
 2ba:	77 27       	eor	r23, r23
 2bc:	f8 e0       	ldi	r31, 0x08	; 8
 2be:	e6 95       	lsr	r30
 2c0:	20 f4       	brcc	.+8      	; 0x2ca <__mulsf3x+0x54>
 2c2:	13 0e       	add	r1, r19
 2c4:	b4 1f       	adc	r27, r20
 2c6:	65 1f       	adc	r22, r21
 2c8:	7a 1f       	adc	r23, r26
 2ca:	33 0f       	add	r19, r19
 2cc:	44 1f       	adc	r20, r20
 2ce:	55 1f       	adc	r21, r21
 2d0:	aa 1f       	adc	r26, r26
 2d2:	fa 95       	dec	r31
 2d4:	a1 f7       	brne	.-24     	; 0x2be <__mulsf3x+0x48>
 2d6:	f8 2f       	mov	r31, r24
 2d8:	88 27       	eor	r24, r24
 2da:	f6 95       	lsr	r31
 2dc:	20 f4       	brcc	.+8      	; 0x2e6 <__mulsf3x+0x70>
 2de:	b4 0f       	add	r27, r20
 2e0:	65 1f       	adc	r22, r21
 2e2:	7a 1f       	adc	r23, r26
 2e4:	8e 1f       	adc	r24, r30
 2e6:	44 0f       	add	r20, r20
 2e8:	55 1f       	adc	r21, r21
 2ea:	aa 1f       	adc	r26, r26
 2ec:	ee 1f       	adc	r30, r30
 2ee:	ff 23       	and	r31, r31
 2f0:	a1 f7       	brne	.-24     	; 0x2da <__mulsf3x+0x64>
 2f2:	88 23       	and	r24, r24
 2f4:	1a f4       	brpl	.+6      	; 0x2fc <__mulsf3x+0x86>
 2f6:	93 95       	inc	r25
 2f8:	39 f4       	brne	.+14     	; 0x308 <__mulsf3x+0x92>
 2fa:	08 c0       	rjmp	.+16     	; 0x30c <__fp_nan>
 2fc:	00 0c       	add	r0, r0
 2fe:	11 1c       	adc	r1, r1
 300:	bb 1f       	adc	r27, r27
 302:	66 1f       	adc	r22, r22
 304:	77 1f       	adc	r23, r23
 306:	88 1f       	adc	r24, r24
 308:	01 28       	or	r0, r1
 30a:	08 95       	ret

0000030c <__fp_nan>:
 30c:	9f ef       	ldi	r25, 0xFF	; 255
 30e:	80 ec       	ldi	r24, 0xC0	; 192
 310:	08 95       	ret

00000312 <__udivmodqi4>:
 312:	99 1b       	sub	r25, r25
 314:	79 e0       	ldi	r23, 0x09	; 9
 316:	04 c0       	rjmp	.+8      	; 0x320 <__udivmodqi4_ep>

00000318 <__udivmodqi4_loop>:
 318:	99 1f       	adc	r25, r25
 31a:	96 17       	cp	r25, r22
 31c:	08 f0       	brcs	.+2      	; 0x320 <__udivmodqi4_ep>
 31e:	96 1b       	sub	r25, r22

00000320 <__udivmodqi4_ep>:
 320:	88 1f       	adc	r24, r24
 322:	7a 95       	dec	r23
 324:	c9 f7       	brne	.-14     	; 0x318 <__udivmodqi4_loop>
 326:	80 95       	com	r24
 328:	08 95       	ret

0000032a <_exit>:
 32a:	ff cf       	rjmp	.-2      	; 0x32a <_exit>

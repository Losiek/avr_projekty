
LEDMulti.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  0000009e  00000132  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800064  00800064  00000136  2**0
                  ALLOC
  3 .stab         00000360  00000000  00000000  00000138  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000071  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00000509  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000055  00000000  00000000  00000529  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000000de  00000000  00000000  0000057e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000071  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000000f1  00000000  00000000  000006cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000020  00000000  00000000  000007c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000ca  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0a c0       	rjmp	.+20     	; 0x16 <__ctors_end>
   2:	23 c0       	rjmp	.+70     	; 0x4a <__bad_interrupt>
   4:	22 c0       	rjmp	.+68     	; 0x4a <__bad_interrupt>
   6:	21 c0       	rjmp	.+66     	; 0x4a <__bad_interrupt>
   8:	20 c0       	rjmp	.+64     	; 0x4a <__bad_interrupt>
   a:	1f c0       	rjmp	.+62     	; 0x4a <__bad_interrupt>
   c:	1e c0       	rjmp	.+60     	; 0x4a <__bad_interrupt>
   e:	1d c0       	rjmp	.+58     	; 0x4a <__bad_interrupt>
  10:	1c c0       	rjmp	.+56     	; 0x4a <__bad_interrupt>
  12:	1b c0       	rjmp	.+54     	; 0x4a <__bad_interrupt>
  14:	1a c0       	rjmp	.+52     	; 0x4a <__bad_interrupt>

00000016 <__ctors_end>:
  16:	11 24       	eor	r1, r1
  18:	1f be       	out	0x3f, r1	; 63
  1a:	cf ed       	ldi	r28, 0xDF	; 223
  1c:	cd bf       	out	0x3d, r28	; 61

0000001e <__do_copy_data>:
  1e:	10 e0       	ldi	r17, 0x00	; 0
  20:	a0 e6       	ldi	r26, 0x60	; 96
  22:	b0 e0       	ldi	r27, 0x00	; 0
  24:	ee e9       	ldi	r30, 0x9E	; 158
  26:	f0 e0       	ldi	r31, 0x00	; 0
  28:	03 c0       	rjmp	.+6      	; 0x30 <.do_copy_data_start>

0000002a <.do_copy_data_loop>:
  2a:	c8 95       	lpm
  2c:	31 96       	adiw	r30, 0x01	; 1
  2e:	0d 92       	st	X+, r0

00000030 <.do_copy_data_start>:
  30:	a4 36       	cpi	r26, 0x64	; 100
  32:	b1 07       	cpc	r27, r17
  34:	d1 f7       	brne	.-12     	; 0x2a <.do_copy_data_loop>

00000036 <__do_clear_bss>:
  36:	10 e0       	ldi	r17, 0x00	; 0
  38:	a4 e6       	ldi	r26, 0x64	; 100
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	01 c0       	rjmp	.+2      	; 0x40 <.do_clear_bss_start>

0000003e <.do_clear_bss_loop>:
  3e:	1d 92       	st	X+, r1

00000040 <.do_clear_bss_start>:
  40:	a9 36       	cpi	r26, 0x69	; 105
  42:	b1 07       	cpc	r27, r17
  44:	e1 f7       	brne	.-8      	; 0x3e <.do_clear_bss_loop>
  46:	02 d0       	rcall	.+4      	; 0x4c <main>
  48:	29 c0       	rjmp	.+82     	; 0x9c <_exit>

0000004a <__bad_interrupt>:
  4a:	da cf       	rjmp	.-76     	; 0x0 <__vectors>

0000004c <main>:
uint8_t g_DaneCom[] = {~(1<<COM1), ~(1<<COM2), ~(1<<COM3), ~(1<<COM4)};


int main(void)
{
  4c:	8f ef       	ldi	r24, 0xFF	; 255
  4e:	87 bb       	out	0x17, r24	; 23
	/////////////////////////////
	// inicjacja
	LEDDDR = 0xff; 
	COMDDR = 1<<COM1 | 1<<COM2 | 1<<COM3 | 1<<COM4; 
  50:	88 e7       	ldi	r24, 0x78	; 120
  52:	81 bb       	out	0x11, r24	; 17
	// koniec inicjacji
	/////////////////////////////
	
	//Wpisanie próbnych wartoœci.
	g_DaneWyswietlacza[0] = ~(1<<LED_B | 1<<LED_C | 1<<LED_A | 1<<LED_E | 1<<LED_F | 1<<LED_D);
  54:	80 ec       	ldi	r24, 0xC0	; 192
  56:	80 93 65 00 	sts	0x0065, r24
	g_DaneWyswietlacza[2] = ~(1<<LED_D | 1<<LED_A | 1<<LED_G | 1<<LED_E | 1<<LED_F);
  5a:	86 e8       	ldi	r24, 0x86	; 134
  5c:	80 93 67 00 	sts	0x0067, r24
	g_DaneWyswietlacza[1] = ~(1<<LED_F | 1<<LED_E | 1<<LED_D);
  60:	87 ec       	ldi	r24, 0xC7	; 199
  62:	80 93 66 00 	sts	0x0066, r24
	g_DaneWyswietlacza[3] = ~(1<<LED_B | 1<<LED_C | 1<<LED_G| 1<<LED_E | 1<<LED_F);
  66:	89 e8       	ldi	r24, 0x89	; 137
  68:	80 93 68 00 	sts	0x0068, r24
  6c:	20 91 64 00 	lds	r18, 0x0064
	
	for(;;)
	{
		//Wygaszenie wyœwietlaczy.
		COMPORT |= 1<<COM1 | 1<<COM2 | 1<<COM3 | 1<<COM4;
  70:	82 b3       	in	r24, 0x12	; 18
  72:	88 67       	ori	r24, 0x78	; 120
  74:	82 bb       	out	0x12, r24	; 18
		//Wys³anie odpowiedniej danej.
		LEDPORT = g_DaneWyswietlacza[g_AktWyswietlacz];
  76:	a2 2f       	mov	r26, r18
  78:	bb 27       	eor	r27, r27
  7a:	fb 2f       	mov	r31, r27
  7c:	ea 2f       	mov	r30, r26
  7e:	eb 59       	subi	r30, 0x9B	; 155
  80:	ff 4f       	sbci	r31, 0xFF	; 255
  82:	80 81       	ld	r24, Z
  84:	88 bb       	out	0x18, r24	; 24
		//W³¹czenie odpowiedniego wyœwietlacza.
		COMPORT &= g_DaneCom[g_AktWyswietlacz];
  86:	82 b3       	in	r24, 0x12	; 18
  88:	a0 5a       	subi	r26, 0xA0	; 160
  8a:	bf 4f       	sbci	r27, 0xFF	; 255
  8c:	9c 91       	ld	r25, X
  8e:	89 23       	and	r24, r25
  90:	82 bb       	out	0x12, r24	; 18
		
		//Zwiêkszanie stanu zmiennej wskazuj¹cej wyœwietlacz
		++g_AktWyswietlacz;
  92:	2f 5f       	subi	r18, 0xFF	; 255
		if (g_AktWyswietlacz > 3) {
  94:	24 30       	cpi	r18, 0x04	; 4
  96:	60 f3       	brcs	.-40     	; 0x70 <main+0x24>
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	ea cf       	rjmp	.-44     	; 0x70 <main+0x24>

0000009c <_exit>:
  9c:	ff cf       	rjmp	.-2      	; 0x9c <_exit>

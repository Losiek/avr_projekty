
helloworld1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000430  000004c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000430  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004ca  2**0
                  ALLOC
  3 .stab         00000378  00000000  00000000  000004cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000071  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  000008b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000043  00000000  00000000  000008f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000027b  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000016c  00000000  00000000  00000bb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000201  00000000  00000000  00000d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000050  00000000  00000000  00000f20  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000f8  00000000  00000000  00000f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000004e  00000000  00000000  00001068  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000070 <__c.1551>:
  70:	48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0d 0a 00 00     Hello world!....

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d4 e0       	ldi	r29, 0x04	; 4
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	11 e0       	ldi	r17, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	e0 e3       	ldi	r30, 0x30	; 48
  94:	f4 e0       	ldi	r31, 0x04	; 4
  96:	02 c0       	rjmp	.+4      	; 0x9c <.do_copy_data_start>

00000098 <.do_copy_data_loop>:
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0

0000009c <.do_copy_data_start>:
  9c:	a6 30       	cpi	r26, 0x06	; 6
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <.do_copy_data_loop>

000000a2 <__do_clear_bss>:
  a2:	11 e0       	ldi	r17, 0x01	; 1
  a4:	a6 e0       	ldi	r26, 0x06	; 6
  a6:	b1 e0       	ldi	r27, 0x01	; 1
  a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
  aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 17 02 	jmp	0x42e	; 0x42e <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:
#include "rs.h"
#include "harddef.h"

int main(void)
{
  be:	10 bc       	out	0x20, r1	; 32
  c0:	87 e6       	ldi	r24, 0x67	; 103
  c2:	89 b9       	out	0x09, r24	; 9
	FILE* fRS;
	///////////////////////////////////////////////////
	//Inicjacja portu szeregowego
	RS_SET_BAUD(DEF_BAUD);
	UCSR0C = 1<<URSEL0 | 1<<UCSZ01 | 1<<UCSZ00;
  c4:	86 e8       	ldi	r24, 0x86	; 134
  c6:	80 bd       	out	0x20, r24	; 32
	UCSR0B = 1<<RXEN0 | 1<<TXEN0;
  c8:	88 e1       	ldi	r24, 0x18	; 24
  ca:	8a b9       	out	0x0a, r24	; 10
	UCSR0A = 0;
  cc:	1b b8       	out	0x0b, r1	; 11
	//Koniec inicjacji
	//////////////////////////////////////////////////
	
	//inicjacja wy/wy
	fRS = fdevopen(rs_put, rs_get);
  ce:	6b e7       	ldi	r22, 0x7B	; 123
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	85 e7       	ldi	r24, 0x75	; 117
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 80 00 	call	0x100	; 0x100 <fdevopen>
	
	fputs_P(PSTR("Hello world!\r\n"), fRS);
  da:	bc 01       	movw	r22, r24
  dc:	80 e7       	ldi	r24, 0x70	; 112
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <fputs_P>
}
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	08 95       	ret

000000ea <rs_put>:
#include <avr/io.h>
#include "rs.h"

int rs_put(char znak)
{
  ea:	5d 9b       	sbis	0x0b, 5	; 11
  ec:	fe cf       	rjmp	.-4      	; 0xea <rs_put>
	//Oczekiwanie a¿ bufor nadajnika jest pusty
	while(!(1<<UDRE0 & UCSR0A)) {}
	UDR0 = znak;
  ee:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	08 95       	ret

000000f6 <rs_get>:

int rs_get(void)
{
  f6:	5f 9b       	sbis	0x0b, 7	; 11
  f8:	fe cf       	rjmp	.-4      	; 0xf6 <rs_get>
	char znak;
	//Oczekiwanie na pojawienie siê danej
	while(!(1<<RXC0 & UCSR0A)) {}
	znak = UDR0;
  fa:	8c b1       	in	r24, 0x0c	; 12
	return znak;
}
  fc:	99 27       	eor	r25, r25
  fe:	08 95       	ret

00000100 <fdevopen>:
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	8c 01       	movw	r16, r24
 10e:	7b 01       	movw	r14, r22
 110:	89 2b       	or	r24, r25
 112:	11 f4       	brne	.+4      	; 0x118 <fdevopen+0x18>
 114:	67 2b       	or	r22, r23
 116:	d1 f1       	breq	.+116    	; 0x18c <fdevopen+0x8c>
 118:	6e e0       	ldi	r22, 0x0E	; 14
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <calloc>
 124:	fc 01       	movw	r30, r24
 126:	00 97       	sbiw	r24, 0x00	; 0
 128:	89 f1       	breq	.+98     	; 0x18c <fdevopen+0x8c>
 12a:	dc 01       	movw	r26, r24
 12c:	80 e8       	ldi	r24, 0x80	; 128
 12e:	83 83       	std	Z+3, r24	; 0x03
 130:	e1 14       	cp	r14, r1
 132:	f1 04       	cpc	r15, r1
 134:	71 f0       	breq	.+28     	; 0x152 <fdevopen+0x52>
 136:	f3 86       	std	Z+11, r15	; 0x0b
 138:	e2 86       	std	Z+10, r14	; 0x0a
 13a:	81 e8       	ldi	r24, 0x81	; 129
 13c:	83 83       	std	Z+3, r24	; 0x03
 13e:	80 91 06 01 	lds	r24, 0x0106
 142:	90 91 07 01 	lds	r25, 0x0107
 146:	89 2b       	or	r24, r25
 148:	21 f4       	brne	.+8      	; 0x152 <fdevopen+0x52>
 14a:	f0 93 07 01 	sts	0x0107, r31
 14e:	e0 93 06 01 	sts	0x0106, r30
 152:	01 15       	cp	r16, r1
 154:	11 05       	cpc	r17, r1
 156:	e1 f0       	breq	.+56     	; 0x190 <fdevopen+0x90>
 158:	11 87       	std	Z+9, r17	; 0x09
 15a:	00 87       	std	Z+8, r16	; 0x08
 15c:	83 81       	ldd	r24, Z+3	; 0x03
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	83 83       	std	Z+3, r24	; 0x03
 162:	80 91 08 01 	lds	r24, 0x0108
 166:	90 91 09 01 	lds	r25, 0x0109
 16a:	89 2b       	or	r24, r25
 16c:	89 f4       	brne	.+34     	; 0x190 <fdevopen+0x90>
 16e:	f0 93 09 01 	sts	0x0109, r31
 172:	e0 93 08 01 	sts	0x0108, r30
 176:	80 91 0a 01 	lds	r24, 0x010A
 17a:	90 91 0b 01 	lds	r25, 0x010B
 17e:	89 2b       	or	r24, r25
 180:	39 f4       	brne	.+14     	; 0x190 <fdevopen+0x90>
 182:	f0 93 0b 01 	sts	0x010B, r31
 186:	e0 93 0a 01 	sts	0x010A, r30
 18a:	02 c0       	rjmp	.+4      	; 0x190 <fdevopen+0x90>
 18c:	a0 e0       	ldi	r26, 0x00	; 0
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	cd 01       	movw	r24, r26
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	1f 91       	pop	r17
 198:	0f 91       	pop	r16
 19a:	ff 90       	pop	r15
 19c:	ef 90       	pop	r14
 19e:	08 95       	ret

000001a0 <fputs_P>:
 1a0:	ef 92       	push	r14
 1a2:	ff 92       	push	r15
 1a4:	0f 93       	push	r16
 1a6:	1f 93       	push	r17
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	ec 01       	movw	r28, r24
 1ae:	8b 01       	movw	r16, r22
 1b0:	fb 01       	movw	r30, r22
 1b2:	83 81       	ldd	r24, Z+3	; 0x03
 1b4:	81 fd       	sbrc	r24, 1
 1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <fputs_P+0x20>
 1b8:	9f ef       	ldi	r25, 0xFF	; 255
 1ba:	e9 2e       	mov	r14, r25
 1bc:	f9 2e       	mov	r15, r25
 1be:	13 c0       	rjmp	.+38     	; 0x1e6 <fputs_P+0x46>
 1c0:	ee 24       	eor	r14, r14
 1c2:	ff 24       	eor	r15, r15
 1c4:	0c c0       	rjmp	.+24     	; 0x1de <fputs_P+0x3e>
 1c6:	f8 01       	movw	r30, r16
 1c8:	20 85       	ldd	r18, Z+8	; 0x08
 1ca:	31 85       	ldd	r19, Z+9	; 0x09
 1cc:	b8 01       	movw	r22, r16
 1ce:	f9 01       	movw	r30, r18
 1d0:	09 95       	icall
 1d2:	89 2b       	or	r24, r25
 1d4:	19 f0       	breq	.+6      	; 0x1dc <fputs_P+0x3c>
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	e8 2e       	mov	r14, r24
 1da:	f8 2e       	mov	r15, r24
 1dc:	21 96       	adiw	r28, 0x01	; 1
 1de:	fe 01       	movw	r30, r28
 1e0:	84 91       	lpm	r24, Z
 1e2:	88 23       	and	r24, r24
 1e4:	81 f7       	brne	.-32     	; 0x1c6 <fputs_P+0x26>
 1e6:	c7 01       	movw	r24, r14
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	08 95       	ret

000001f6 <calloc>:
 1f6:	0f 93       	push	r16
 1f8:	1f 93       	push	r17
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	86 9f       	mul	r24, r22
 200:	80 01       	movw	r16, r0
 202:	87 9f       	mul	r24, r23
 204:	10 0d       	add	r17, r0
 206:	96 9f       	mul	r25, r22
 208:	10 0d       	add	r17, r0
 20a:	11 24       	eor	r1, r1
 20c:	c8 01       	movw	r24, r16
 20e:	0e 94 17 01 	call	0x22e	; 0x22e <malloc>
 212:	ec 01       	movw	r28, r24
 214:	00 97       	sbiw	r24, 0x00	; 0
 216:	29 f0       	breq	.+10     	; 0x222 <calloc+0x2c>
 218:	a8 01       	movw	r20, r16
 21a:	60 e0       	ldi	r22, 0x00	; 0
 21c:	70 e0       	ldi	r23, 0x00	; 0
 21e:	0e 94 10 02 	call	0x420	; 0x420 <memset>
 222:	ce 01       	movw	r24, r28
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	08 95       	ret

0000022e <malloc>:
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	ac 01       	movw	r20, r24
 234:	02 97       	sbiw	r24, 0x02	; 2
 236:	10 f4       	brcc	.+4      	; 0x23c <malloc+0xe>
 238:	42 e0       	ldi	r20, 0x02	; 2
 23a:	50 e0       	ldi	r21, 0x00	; 0
 23c:	a0 91 0e 01 	lds	r26, 0x010E
 240:	b0 91 0f 01 	lds	r27, 0x010F
 244:	fd 01       	movw	r30, r26
 246:	c0 e0       	ldi	r28, 0x00	; 0
 248:	d0 e0       	ldi	r29, 0x00	; 0
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	20 c0       	rjmp	.+64     	; 0x290 <malloc+0x62>
 250:	80 81       	ld	r24, Z
 252:	91 81       	ldd	r25, Z+1	; 0x01
 254:	84 17       	cp	r24, r20
 256:	95 07       	cpc	r25, r21
 258:	69 f4       	brne	.+26     	; 0x274 <malloc+0x46>
 25a:	82 81       	ldd	r24, Z+2	; 0x02
 25c:	93 81       	ldd	r25, Z+3	; 0x03
 25e:	20 97       	sbiw	r28, 0x00	; 0
 260:	19 f0       	breq	.+6      	; 0x268 <malloc+0x3a>
 262:	9b 83       	std	Y+3, r25	; 0x03
 264:	8a 83       	std	Y+2, r24	; 0x02
 266:	04 c0       	rjmp	.+8      	; 0x270 <malloc+0x42>
 268:	90 93 0f 01 	sts	0x010F, r25
 26c:	80 93 0e 01 	sts	0x010E, r24
 270:	cf 01       	movw	r24, r30
 272:	32 c0       	rjmp	.+100    	; 0x2d8 <malloc+0xaa>
 274:	48 17       	cp	r20, r24
 276:	59 07       	cpc	r21, r25
 278:	38 f4       	brcc	.+14     	; 0x288 <malloc+0x5a>
 27a:	21 15       	cp	r18, r1
 27c:	31 05       	cpc	r19, r1
 27e:	19 f0       	breq	.+6      	; 0x286 <malloc+0x58>
 280:	82 17       	cp	r24, r18
 282:	93 07       	cpc	r25, r19
 284:	08 f4       	brcc	.+2      	; 0x288 <malloc+0x5a>
 286:	9c 01       	movw	r18, r24
 288:	ef 01       	movw	r28, r30
 28a:	02 80       	ldd	r0, Z+2	; 0x02
 28c:	f3 81       	ldd	r31, Z+3	; 0x03
 28e:	e0 2d       	mov	r30, r0
 290:	30 97       	sbiw	r30, 0x00	; 0
 292:	f1 f6       	brne	.-68     	; 0x250 <malloc+0x22>
 294:	21 15       	cp	r18, r1
 296:	31 05       	cpc	r19, r1
 298:	89 f1       	breq	.+98     	; 0x2fc <malloc+0xce>
 29a:	c9 01       	movw	r24, r18
 29c:	84 1b       	sub	r24, r20
 29e:	95 0b       	sbc	r25, r21
 2a0:	04 97       	sbiw	r24, 0x04	; 4
 2a2:	08 f4       	brcc	.+2      	; 0x2a6 <malloc+0x78>
 2a4:	a9 01       	movw	r20, r18
 2a6:	e0 e0       	ldi	r30, 0x00	; 0
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	26 c0       	rjmp	.+76     	; 0x2f8 <malloc+0xca>
 2ac:	8d 91       	ld	r24, X+
 2ae:	9c 91       	ld	r25, X
 2b0:	11 97       	sbiw	r26, 0x01	; 1
 2b2:	82 17       	cp	r24, r18
 2b4:	93 07       	cpc	r25, r19
 2b6:	e9 f4       	brne	.+58     	; 0x2f2 <malloc+0xc4>
 2b8:	48 17       	cp	r20, r24
 2ba:	59 07       	cpc	r21, r25
 2bc:	79 f4       	brne	.+30     	; 0x2dc <malloc+0xae>
 2be:	ed 01       	movw	r28, r26
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	9b 81       	ldd	r25, Y+3	; 0x03
 2c4:	30 97       	sbiw	r30, 0x00	; 0
 2c6:	19 f0       	breq	.+6      	; 0x2ce <malloc+0xa0>
 2c8:	93 83       	std	Z+3, r25	; 0x03
 2ca:	82 83       	std	Z+2, r24	; 0x02
 2cc:	04 c0       	rjmp	.+8      	; 0x2d6 <malloc+0xa8>
 2ce:	90 93 0f 01 	sts	0x010F, r25
 2d2:	80 93 0e 01 	sts	0x010E, r24
 2d6:	cd 01       	movw	r24, r26
 2d8:	02 96       	adiw	r24, 0x02	; 2
 2da:	49 c0       	rjmp	.+146    	; 0x36e <malloc+0x140>
 2dc:	84 1b       	sub	r24, r20
 2de:	95 0b       	sbc	r25, r21
 2e0:	fd 01       	movw	r30, r26
 2e2:	e8 0f       	add	r30, r24
 2e4:	f9 1f       	adc	r31, r25
 2e6:	41 93       	st	Z+, r20
 2e8:	51 93       	st	Z+, r21
 2ea:	02 97       	sbiw	r24, 0x02	; 2
 2ec:	8d 93       	st	X+, r24
 2ee:	9c 93       	st	X, r25
 2f0:	3a c0       	rjmp	.+116    	; 0x366 <malloc+0x138>
 2f2:	fd 01       	movw	r30, r26
 2f4:	a2 81       	ldd	r26, Z+2	; 0x02
 2f6:	b3 81       	ldd	r27, Z+3	; 0x03
 2f8:	10 97       	sbiw	r26, 0x00	; 0
 2fa:	c1 f6       	brne	.-80     	; 0x2ac <malloc+0x7e>
 2fc:	80 91 0c 01 	lds	r24, 0x010C
 300:	90 91 0d 01 	lds	r25, 0x010D
 304:	89 2b       	or	r24, r25
 306:	41 f4       	brne	.+16     	; 0x318 <malloc+0xea>
 308:	80 91 02 01 	lds	r24, 0x0102
 30c:	90 91 03 01 	lds	r25, 0x0103
 310:	90 93 0d 01 	sts	0x010D, r25
 314:	80 93 0c 01 	sts	0x010C, r24
 318:	20 91 04 01 	lds	r18, 0x0104
 31c:	30 91 05 01 	lds	r19, 0x0105
 320:	21 15       	cp	r18, r1
 322:	31 05       	cpc	r19, r1
 324:	41 f4       	brne	.+16     	; 0x336 <malloc+0x108>
 326:	2d b7       	in	r18, 0x3d	; 61
 328:	3e b7       	in	r19, 0x3e	; 62
 32a:	80 91 00 01 	lds	r24, 0x0100
 32e:	90 91 01 01 	lds	r25, 0x0101
 332:	28 1b       	sub	r18, r24
 334:	39 0b       	sbc	r19, r25
 336:	e0 91 0c 01 	lds	r30, 0x010C
 33a:	f0 91 0d 01 	lds	r31, 0x010D
 33e:	2e 1b       	sub	r18, r30
 340:	3f 0b       	sbc	r19, r31
 342:	24 17       	cp	r18, r20
 344:	35 07       	cpc	r19, r21
 346:	88 f0       	brcs	.+34     	; 0x36a <malloc+0x13c>
 348:	ca 01       	movw	r24, r20
 34a:	02 96       	adiw	r24, 0x02	; 2
 34c:	28 17       	cp	r18, r24
 34e:	39 07       	cpc	r19, r25
 350:	60 f0       	brcs	.+24     	; 0x36a <malloc+0x13c>
 352:	cf 01       	movw	r24, r30
 354:	84 0f       	add	r24, r20
 356:	95 1f       	adc	r25, r21
 358:	02 96       	adiw	r24, 0x02	; 2
 35a:	90 93 0d 01 	sts	0x010D, r25
 35e:	80 93 0c 01 	sts	0x010C, r24
 362:	41 93       	st	Z+, r20
 364:	51 93       	st	Z+, r21
 366:	cf 01       	movw	r24, r30
 368:	02 c0       	rjmp	.+4      	; 0x36e <malloc+0x140>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	08 95       	ret

00000374 <free>:
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	00 97       	sbiw	r24, 0x00	; 0
 37a:	09 f4       	brne	.+2      	; 0x37e <free+0xa>
 37c:	4e c0       	rjmp	.+156    	; 0x41a <free+0xa6>
 37e:	ec 01       	movw	r28, r24
 380:	22 97       	sbiw	r28, 0x02	; 2
 382:	1b 82       	std	Y+3, r1	; 0x03
 384:	1a 82       	std	Y+2, r1	; 0x02
 386:	a0 91 0e 01 	lds	r26, 0x010E
 38a:	b0 91 0f 01 	lds	r27, 0x010F
 38e:	10 97       	sbiw	r26, 0x00	; 0
 390:	11 f1       	breq	.+68     	; 0x3d6 <free+0x62>
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	01 c0       	rjmp	.+2      	; 0x39a <free+0x26>
 398:	dc 01       	movw	r26, r24
 39a:	ac 17       	cp	r26, r28
 39c:	bd 07       	cpc	r27, r29
 39e:	00 f1       	brcs	.+64     	; 0x3e0 <free+0x6c>
 3a0:	bb 83       	std	Y+3, r27	; 0x03
 3a2:	aa 83       	std	Y+2, r26	; 0x02
 3a4:	fe 01       	movw	r30, r28
 3a6:	21 91       	ld	r18, Z+
 3a8:	31 91       	ld	r19, Z+
 3aa:	e2 0f       	add	r30, r18
 3ac:	f3 1f       	adc	r31, r19
 3ae:	ea 17       	cp	r30, r26
 3b0:	fb 07       	cpc	r31, r27
 3b2:	71 f4       	brne	.+28     	; 0x3d0 <free+0x5c>
 3b4:	2e 5f       	subi	r18, 0xFE	; 254
 3b6:	3f 4f       	sbci	r19, 0xFF	; 255
 3b8:	8d 91       	ld	r24, X+
 3ba:	9c 91       	ld	r25, X
 3bc:	11 97       	sbiw	r26, 0x01	; 1
 3be:	82 0f       	add	r24, r18
 3c0:	93 1f       	adc	r25, r19
 3c2:	99 83       	std	Y+1, r25	; 0x01
 3c4:	88 83       	st	Y, r24
 3c6:	fd 01       	movw	r30, r26
 3c8:	82 81       	ldd	r24, Z+2	; 0x02
 3ca:	93 81       	ldd	r25, Z+3	; 0x03
 3cc:	9b 83       	std	Y+3, r25	; 0x03
 3ce:	8a 83       	std	Y+2, r24	; 0x02
 3d0:	41 15       	cp	r20, r1
 3d2:	51 05       	cpc	r21, r1
 3d4:	59 f4       	brne	.+22     	; 0x3ec <free+0x78>
 3d6:	d0 93 0f 01 	sts	0x010F, r29
 3da:	c0 93 0e 01 	sts	0x010E, r28
 3de:	1d c0       	rjmp	.+58     	; 0x41a <free+0xa6>
 3e0:	fd 01       	movw	r30, r26
 3e2:	82 81       	ldd	r24, Z+2	; 0x02
 3e4:	93 81       	ldd	r25, Z+3	; 0x03
 3e6:	ad 01       	movw	r20, r26
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	b1 f6       	brne	.-84     	; 0x398 <free+0x24>
 3ec:	fa 01       	movw	r30, r20
 3ee:	d3 83       	std	Z+3, r29	; 0x03
 3f0:	c2 83       	std	Z+2, r28	; 0x02
 3f2:	21 91       	ld	r18, Z+
 3f4:	31 91       	ld	r19, Z+
 3f6:	e2 0f       	add	r30, r18
 3f8:	f3 1f       	adc	r31, r19
 3fa:	ec 17       	cp	r30, r28
 3fc:	fd 07       	cpc	r31, r29
 3fe:	69 f4       	brne	.+26     	; 0x41a <free+0xa6>
 400:	2e 5f       	subi	r18, 0xFE	; 254
 402:	3f 4f       	sbci	r19, 0xFF	; 255
 404:	88 81       	ld	r24, Y
 406:	99 81       	ldd	r25, Y+1	; 0x01
 408:	82 0f       	add	r24, r18
 40a:	93 1f       	adc	r25, r19
 40c:	fa 01       	movw	r30, r20
 40e:	91 83       	std	Z+1, r25	; 0x01
 410:	80 83       	st	Z, r24
 412:	8a 81       	ldd	r24, Y+2	; 0x02
 414:	9b 81       	ldd	r25, Y+3	; 0x03
 416:	93 83       	std	Z+3, r25	; 0x03
 418:	82 83       	std	Z+2, r24	; 0x02
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <memset>:
 420:	dc 01       	movw	r26, r24
 422:	01 c0       	rjmp	.+2      	; 0x426 <memset+0x6>
 424:	6d 93       	st	X+, r22
 426:	41 50       	subi	r20, 0x01	; 1
 428:	50 40       	sbci	r21, 0x00	; 0
 42a:	e0 f7       	brcc	.-8      	; 0x424 <memset+0x4>
 42c:	08 95       	ret

0000042e <_exit>:
 42e:	ff cf       	rjmp	.-2      	; 0x42e <_exit>

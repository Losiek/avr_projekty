
projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000378  00000000  00000000  00000148  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000071  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000531  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  00000551  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000113  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000ab  00000000  00000000  0000067f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000135  00000000  00000000  0000072a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000860  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d9  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000018  00000000  00000000  00000959  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ef       	ldi	r30, 0xF2	; 242
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 30       	cpi	r26, 0x00	; 0
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include <util/delay.h>
#include <harddef.h>

int main()
{
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	27 bb       	out	0x17, r18	; 23
	///////////////////////////////////////////////////////////////////
	//Inicacja wyœwietlaczy
	LEDDDR = 0xff;
	COMDDR = 1<<COM1|1<<COM2|1<<COM3|1<<COM4;
  b2:	88 e7       	ldi	r24, 0x78	; 120
  b4:	81 bb       	out	0x11, r24	; 17
	//////////////////////////////////////////////////////////////////
	//Inicjacja PWM
    TCCR1A = (1 << WGM10); 
  b6:	91 e0       	ldi	r25, 0x01	; 1
  b8:	9f bd       	out	0x2f, r25	; 47
    TCCR1A = (1 << COM1A0) | (1 << COM1A1); // PWM phase correct 8 bitowy
  ba:	80 ec       	ldi	r24, 0xC0	; 192
  bc:	8f bd       	out	0x2f, r24	; 47
    TCCR1B = (1 << CS10); // preskaler 8 
  be:	9e bd       	out	0x2e, r25	; 46
	//
	TCCR2 = (1 << WGM20); 
  c0:	80 e4       	ldi	r24, 0x40	; 64
  c2:	87 bd       	out	0x27, r24	; 39
    TCCR2 = (1 << COM20) | (1 << COM21); // PWM phase correct 8 bitowy
  c4:	80 e3       	ldi	r24, 0x30	; 48
  c6:	87 bd       	out	0x27, r24	; 39
    TCCR2 = (1 << CS20); // preskaler 8 
  c8:	97 bd       	out	0x27, r25	; 39
	//TIMSK = 0x00;
	//Koniec inicjacji
	//////////////////////////////////////////////////////////////////
	PORTD = 0xff;
  ca:	22 bb       	out	0x12, r18	; 18
	//COMPORT = ~(1<<COM1);
	//LEDPORT = ~(1<<LED_A|1<<LED_B|1<<LED_C|1<<LED_D|1<<LED_E|1<<LED_F|1<<LED_G);
	PWM_1 = 0xff;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	9b bd       	out	0x2b, r25	; 43
  d2:	8a bd       	out	0x2a, r24	; 42
	PWM_2 = 0x00;
  d4:	12 bc       	out	0x22, r1	; 34
	OCR1B = 0xff;
  d6:	99 bd       	out	0x29, r25	; 41
  d8:	88 bd       	out	0x28, r24	; 40
  da:	e0 e0       	ldi	r30, 0x00	; 0
  dc:	f0 e0       	ldi	r31, 0x00	; 0
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  de:	cf 01       	movw	r24, r30
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x32>
	
	for(;;)
	{
		_delay_ms(50);
		--PWM_1;
  e4:	8a b5       	in	r24, 0x2a	; 42
  e6:	9b b5       	in	r25, 0x2b	; 43
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	9b bd       	out	0x2b, r25	; 43
  ec:	8a bd       	out	0x2a, r24	; 42
  ee:	f7 cf       	rjmp	.-18     	; 0xde <main+0x30>

000000f0 <_exit>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <_exit>

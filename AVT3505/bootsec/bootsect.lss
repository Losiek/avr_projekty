
bootsect.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bootloader   00000014  000000c8  000000c8  0000011c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000378  00000000  00000000  00000130  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000071  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000028  00000000  00000000  00000519  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000024  00000000  00000000  00000541  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000081  00000000  00000000  00000565  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000050  00000000  00000000  000005e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000105  00000000  00000000  00000636  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000030  00000000  00000000  0000073c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000a0  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 ec       	ldi	r30, 0xC8	; 200
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 30       	cpi	r26, 0x00	; 0
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:

void boot(void) __attribute__((section(".bootloader")));

int main() 
{
  ae:	8c e3       	ldi	r24, 0x3C	; 60
  b0:	82 bb       	out	0x12, r24	; 18
	//Konfiguracja portów
	PORT(COMPORT) = 1<<COM1 | 1<<COM2 | 1<<COM3 | 1<<COM4;
	DDR(LEDPORT) =  0xff;
  b2:	8f ef       	ldi	r24, 0xFF	; 255
  b4:	87 bb       	out	0x17, r24	; 23
	DDR(COMPORT) =  1<<COM1 | 1<<COM3 | 1<<COM3 | 1<<COM4;
  b6:	8c e2       	ldi	r24, 0x2C	; 44
  b8:	81 bb       	out	0x11, r24	; 17
	
	//Wyswietlanie kreski
	PORT(LEDPORT) = ~(1<<LED_A);
  ba:	8f ee       	ldi	r24, 0xEF	; 239
  bc:	88 bb       	out	0x18, r24	; 24
	PORT(COMPORT) &= ~(1<<COM1);
  be:	95 98       	cbi	0x12, 5	; 18
	
	return 0;
}
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	08 95       	ret

000000c6 <_exit>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <_exit>
Disassembly of section .bootloader:

000000c8 <boot>:

void boot(void)
{
  c8:	8c e3       	ldi	r24, 0x3C	; 60
  ca:	82 bb       	out	0x12, r24	; 18
	//Konfiguracja portów
	PORT(COMPORT) = 1<<COM1 | 1<<COM2 | 1<<COM3 | 1<<COM4;
	DDR(LEDPORT) =  0xff;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	87 bb       	out	0x17, r24	; 23
	DDR(COMPORT) =  1<<COM1 | 1<<COM3 | 1<<COM3 | 1<<COM4;
  d0:	8c e2       	ldi	r24, 0x2C	; 44
  d2:	81 bb       	out	0x11, r24	; 17
	
	//Wyswietlanie kropki
	PORT(LEDPORT) = ~(1<<LED_DP);
  d4:	8d ef       	ldi	r24, 0xFD	; 253
  d6:	88 bb       	out	0x18, r24	; 24
	PORT(COMPORT) &= ~(1<<COM1);
  d8:	95 98       	cbi	0x12, 5	; 18
  da:	ff cf       	rjmp	.-2      	; 0xda <_etext+0x12>
